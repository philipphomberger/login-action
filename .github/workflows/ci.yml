name: ci

on:
  push:
    branches:
      - master
      - releases/v*

Jobs:
 dockerhub:
   runs-on: ${{ matrix.os }}
   strategy:
     fail-fast: false
     matrix:
       os:
         - ubuntu-20.04
         - ubuntu-18.04
         - ubuntu-16.04
       logout:
         - true
         - false
   steps:
     -
       name: Checkout
       uses: actions/checkout@v2.3.2
     -
       name: Login to DockerHub
       uses: ./
       with:
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_PASSWORD }}
         logout: ${{ matrix.logout }}
     -
       name: Clear
       if: always()
       run: |
         rm -f ${HOME}/.docker/config.json
     -
        name: Checkout
        uses: actions/checkout@v2
     -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
     -
        name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}
     -
       name: Available platforms
       run: echo ${{ steps.buildx.outputs.platforms }}  

  # gpr:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       logout:
  #         - true
  #         - false
  #   steps:
  #     -
  #       name: Checkout
  #       uses: actions/checkout@v2.3.2
  #     -
  #       name: Login to GitHub Package Registry
  #       uses: ./
  #       with:
  #         registry: docker.pkg.github.com
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #         logout: ${{ matrix.logout }}
  #     -
  #       name: Clear
  #       if: always()
  #       run: |
  #         rm -f ${HOME}/.docker/config.json

#  gitlab:
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        logout:
#          - true
#          - false
#    steps:
#      -
#        name: Checkout
#        uses: actions/checkout@v2.3.2
#      -
#        name: Login to GitLab
#        uses: ./
#        with:
#          registry: registry.gitlab.com
#          username: ${{ secrets.GITLAB_USERNAME_TEST }}
#          password: ${{ secrets.GITLAB_PASSWORD_TEST }}
#          logout: ${{ matrix.logout }}
#      -
#        name: Clear
#        if: always()
#        run: |
#          rm -f ${HOME}/.docker/config.json
#
#  ecr:
#    runs-on: ${{ matrix.os }}
#    strategy:
#      fail-fast: false
#      matrix:
#        os:
#          - ubuntu-20.04
#          - ubuntu-18.04
#          - ubuntu-16.04
#        logout:
#          - true
#          - false
#    steps:
#      -
#        name: Checkout
#        uses: actions/checkout@v2.3.1
#      -
#        name: Login to ECR
#        uses: ./
#        with:
#          registry: ${{ secrets.AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
#          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          logout: ${{ matrix.logout }}
#      -
#        name: Clear
#        if: always()
#        run: |
#          rm -f ${HOME}/.docker/config.json
#
#  ecr-aws-creds:
#    runs-on: ${{ matrix.os }}
#    strategy:
#      fail-fast: false
#      matrix:
#        os:
#          - ubuntu-20.04
#          - ubuntu-18.04
#          - ubuntu-16.04
#    steps:
#      -
#        name: Checkout
#        uses: actions/checkout@v2.3.1
#      -
#        name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ secrets.AWS_REGION }}
#      -
#        name: Login to ECR
#        uses: ./
#        with:
#          registry: ${{ secrets.AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
#      -
#        name: Clear
#        if: always()
#        run: |
#          rm -f ${HOME}/.docker/config.json
